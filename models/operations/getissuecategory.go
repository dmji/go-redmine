// Code generated by Speakeasy (https://speakeasy.com).

package operations

import (
	"github.com/dmji/go-redmine/models/components"
)

type GetIssueCategoryRequest struct {
	Format             components.Format `pathParam:"style=simple,explode=false,name=format"`
	IssueCategoryID    int64             `pathParam:"style=simple,explode=false,name=issue_category_id"`
	XRedmineSwitchUser *string           `header:"style=simple,explode=false,name=X-Redmine-Switch-User"`
}

func (o *GetIssueCategoryRequest) GetFormat() components.Format {
	if o == nil {
		return components.Format("")
	}
	return o.Format
}

func (o *GetIssueCategoryRequest) GetIssueCategoryID() int64 {
	if o == nil {
		return 0
	}
	return o.IssueCategoryID
}

func (o *GetIssueCategoryRequest) GetXRedmineSwitchUser() *string {
	if o == nil {
		return nil
	}
	return o.XRedmineSwitchUser
}

type GetIssueCategoryResponseBody struct {
	IssueCategory components.IssueCategory `json:"issue_category"`
}

func (o *GetIssueCategoryResponseBody) GetIssueCategory() components.IssueCategory {
	if o == nil {
		return components.IssueCategory{}
	}
	return o.IssueCategory
}

type GetIssueCategoryResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	Object   *GetIssueCategoryResponseBody
}

func (o *GetIssueCategoryResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetIssueCategoryResponse) GetObject() *GetIssueCategoryResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
