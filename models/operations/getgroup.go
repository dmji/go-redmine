// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/dmji/go-redmine/models/components"
)

type GetGroupQueryParamInclude string

const (
	GetGroupQueryParamIncludeUsers       GetGroupQueryParamInclude = "users"
	GetGroupQueryParamIncludeMemberships GetGroupQueryParamInclude = "memberships"
)

func (e GetGroupQueryParamInclude) ToPointer() *GetGroupQueryParamInclude {
	return &e
}
func (e *GetGroupQueryParamInclude) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "users":
		fallthrough
	case "memberships":
		*e = GetGroupQueryParamInclude(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetGroupQueryParamInclude: %v", v)
	}
}

type GetGroupRequest struct {
	Format             components.Format           `pathParam:"style=simple,explode=false,name=format"`
	GroupID            int64                       `pathParam:"style=simple,explode=false,name=group_id"`
	XRedmineSwitchUser *string                     `header:"style=simple,explode=false,name=X-Redmine-Switch-User"`
	Include            []GetGroupQueryParamInclude `queryParam:"style=form,explode=false,name=include"`
}

func (o *GetGroupRequest) GetFormat() components.Format {
	if o == nil {
		return components.Format("")
	}
	return o.Format
}

func (o *GetGroupRequest) GetGroupID() int64 {
	if o == nil {
		return 0
	}
	return o.GroupID
}

func (o *GetGroupRequest) GetXRedmineSwitchUser() *string {
	if o == nil {
		return nil
	}
	return o.XRedmineSwitchUser
}

func (o *GetGroupRequest) GetInclude() []GetGroupQueryParamInclude {
	if o == nil {
		return nil
	}
	return o.Include
}

type GetGroupResponseBody struct {
	Group components.Group `json:"group"`
}

func (o *GetGroupResponseBody) GetGroup() components.Group {
	if o == nil {
		return components.Group{}
	}
	return o.Group
}

type GetGroupResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	Object   *GetGroupResponseBody
}

func (o *GetGroupResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetGroupResponse) GetObject() *GetGroupResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
