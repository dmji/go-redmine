// Code generated by Speakeasy (https://speakeasy.com).

package operations

import (
	"github.com/dmji/go-redmine/models/components"
)

type AddUserToGroupRequestBody struct {
	UserID int64 `json:"user_id"`
}

func (o *AddUserToGroupRequestBody) GetUserID() int64 {
	if o == nil {
		return 0
	}
	return o.UserID
}

type AddUserToGroupRequest struct {
	Format             components.Format          `pathParam:"style=simple,explode=false,name=format"`
	GroupID            int64                      `pathParam:"style=simple,explode=false,name=group_id"`
	XRedmineSwitchUser *string                    `header:"style=simple,explode=false,name=X-Redmine-Switch-User"`
	RequestBody        *AddUserToGroupRequestBody `request:"mediaType=application/json"`
}

func (o *AddUserToGroupRequest) GetFormat() components.Format {
	if o == nil {
		return components.Format("")
	}
	return o.Format
}

func (o *AddUserToGroupRequest) GetGroupID() int64 {
	if o == nil {
		return 0
	}
	return o.GroupID
}

func (o *AddUserToGroupRequest) GetXRedmineSwitchUser() *string {
	if o == nil {
		return nil
	}
	return o.XRedmineSwitchUser
}

func (o *AddUserToGroupRequest) GetRequestBody() *AddUserToGroupRequestBody {
	if o == nil {
		return nil
	}
	return o.RequestBody
}

type AddUserToGroupResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
}

func (o *AddUserToGroupResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}
