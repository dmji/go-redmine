// Code generated by Speakeasy (https://speakeasy.com).

package operations

import (
	"github.com/dmji/go-redmine/models/components"
)

type IssueCategory struct {
	Name         string `json:"name"`
	AssignedToID *int64 `json:"assigned_to_id,omitempty"`
}

func (o *IssueCategory) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *IssueCategory) GetAssignedToID() *int64 {
	if o == nil {
		return nil
	}
	return o.AssignedToID
}

type CreateIssueCategoryRequestBody struct {
	IssueCategory IssueCategory `json:"issue_category"`
}

func (o *CreateIssueCategoryRequestBody) GetIssueCategory() IssueCategory {
	if o == nil {
		return IssueCategory{}
	}
	return o.IssueCategory
}

type CreateIssueCategoryRequest struct {
	Format             components.Format               `pathParam:"style=simple,explode=false,name=format"`
	ProjectID          int64                           `pathParam:"style=simple,explode=false,name=project_id"`
	XRedmineSwitchUser *string                         `header:"style=simple,explode=false,name=X-Redmine-Switch-User"`
	RequestBody        *CreateIssueCategoryRequestBody `request:"mediaType=application/json"`
}

func (o *CreateIssueCategoryRequest) GetFormat() components.Format {
	if o == nil {
		return components.Format("")
	}
	return o.Format
}

func (o *CreateIssueCategoryRequest) GetProjectID() int64 {
	if o == nil {
		return 0
	}
	return o.ProjectID
}

func (o *CreateIssueCategoryRequest) GetXRedmineSwitchUser() *string {
	if o == nil {
		return nil
	}
	return o.XRedmineSwitchUser
}

func (o *CreateIssueCategoryRequest) GetRequestBody() *CreateIssueCategoryRequestBody {
	if o == nil {
		return nil
	}
	return o.RequestBody
}

type CreateIssueCategoryResponseBody struct {
	IssueCategory components.IssueCategory `json:"issue_category"`
}

func (o *CreateIssueCategoryResponseBody) GetIssueCategory() components.IssueCategory {
	if o == nil {
		return components.IssueCategory{}
	}
	return o.IssueCategory
}

type CreateIssueCategoryResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	Object   *CreateIssueCategoryResponseBody
}

func (o *CreateIssueCategoryResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *CreateIssueCategoryResponse) GetObject() *CreateIssueCategoryResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
