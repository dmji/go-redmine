// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/dmji/go-redmine/models/components"
)

type GetMembershipRequest struct {
	Format             components.Format `pathParam:"style=simple,explode=false,name=format"`
	MembershipID       int64             `pathParam:"style=simple,explode=false,name=membership_id"`
	XRedmineSwitchUser *string           `header:"style=simple,explode=false,name=X-Redmine-Switch-User"`
}

func (o *GetMembershipRequest) GetFormat() components.Format {
	if o == nil {
		return components.Format("")
	}
	return o.Format
}

func (o *GetMembershipRequest) GetMembershipID() int64 {
	if o == nil {
		return 0
	}
	return o.MembershipID
}

func (o *GetMembershipRequest) GetXRedmineSwitchUser() *string {
	if o == nil {
		return nil
	}
	return o.XRedmineSwitchUser
}

type GetMembershipResponseBody struct {
	Membership components.Membership `json:"membership"`
}

func (o *GetMembershipResponseBody) GetMembership() components.Membership {
	if o == nil {
		return components.Membership{}
	}
	return o.Membership
}

type GetMembershipResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	Object   *GetMembershipResponseBody
}

func (o *GetMembershipResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetMembershipResponse) GetObject() *GetMembershipResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
