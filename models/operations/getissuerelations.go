// Code generated by Speakeasy (https://speakeasy.com).

package operations

import (
	"github.com/dmji/go-redmine/models/components"
)

type GetIssueRelationsRequest struct {
	Format             components.Format `pathParam:"style=simple,explode=false,name=format"`
	IssueID            int64             `pathParam:"style=simple,explode=false,name=issue_id"`
	XRedmineSwitchUser *string           `header:"style=simple,explode=false,name=X-Redmine-Switch-User"`
}

func (o *GetIssueRelationsRequest) GetFormat() components.Format {
	if o == nil {
		return components.Format("")
	}
	return o.Format
}

func (o *GetIssueRelationsRequest) GetIssueID() int64 {
	if o == nil {
		return 0
	}
	return o.IssueID
}

func (o *GetIssueRelationsRequest) GetXRedmineSwitchUser() *string {
	if o == nil {
		return nil
	}
	return o.XRedmineSwitchUser
}

type GetIssueRelationsResponseBody struct {
	Relations []components.IssueRelation `json:"relations"`
}

func (o *GetIssueRelationsResponseBody) GetRelations() []components.IssueRelation {
	if o == nil {
		return []components.IssueRelation{}
	}
	return o.Relations
}

type GetIssueRelationsResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	Object   *GetIssueRelationsResponseBody
}

func (o *GetIssueRelationsResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetIssueRelationsResponse) GetObject() *GetIssueRelationsResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
