// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/dmji/go-redmine/models/components"
)

type GetTrackersRequest struct {
	Format             components.Format `pathParam:"style=simple,explode=false,name=format"`
	XRedmineSwitchUser *string           `header:"style=simple,explode=false,name=X-Redmine-Switch-User"`
}

func (o *GetTrackersRequest) GetFormat() components.Format {
	if o == nil {
		return components.Format("")
	}
	return o.Format
}

func (o *GetTrackersRequest) GetXRedmineSwitchUser() *string {
	if o == nil {
		return nil
	}
	return o.XRedmineSwitchUser
}

type GetTrackersResponseBody struct {
	Trackers []components.Tracker `json:"trackers"`
}

func (o *GetTrackersResponseBody) GetTrackers() []components.Tracker {
	if o == nil {
		return []components.Tracker{}
	}
	return o.Trackers
}

type GetTrackersResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	Object   *GetTrackersResponseBody
}

func (o *GetTrackersResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetTrackersResponse) GetObject() *GetTrackersResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
