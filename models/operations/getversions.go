// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/dmji/go-redmine/models/components"
)

type GetVersionsRequest struct {
	Format             components.Format `pathParam:"style=simple,explode=false,name=format"`
	VersionID          int64             `pathParam:"style=simple,explode=false,name=version_id"`
	XRedmineSwitchUser *string           `header:"style=simple,explode=false,name=X-Redmine-Switch-User"`
}

func (o *GetVersionsRequest) GetFormat() components.Format {
	if o == nil {
		return components.Format("")
	}
	return o.Format
}

func (o *GetVersionsRequest) GetVersionID() int64 {
	if o == nil {
		return 0
	}
	return o.VersionID
}

func (o *GetVersionsRequest) GetXRedmineSwitchUser() *string {
	if o == nil {
		return nil
	}
	return o.XRedmineSwitchUser
}

type GetVersionsResponseBody struct {
	Version components.Version `json:"version"`
}

func (o *GetVersionsResponseBody) GetVersion() components.Version {
	if o == nil {
		return components.Version{}
	}
	return o.Version
}

type GetVersionsResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	Object   *GetVersionsResponseBody
}

func (o *GetVersionsResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetVersionsResponse) GetObject() *GetVersionsResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
