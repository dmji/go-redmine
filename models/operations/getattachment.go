// Code generated by Speakeasy (https://speakeasy.com).

package operations

import (
	"github.com/dmji/go-redmine/models/components"
)

type GetAttachmentRequest struct {
	Format             components.Format `pathParam:"style=simple,explode=false,name=format"`
	AttachmentID       float64           `pathParam:"style=simple,explode=false,name=attachment_id"`
	XRedmineSwitchUser *string           `header:"style=simple,explode=false,name=X-Redmine-Switch-User"`
}

func (o *GetAttachmentRequest) GetFormat() components.Format {
	if o == nil {
		return components.Format("")
	}
	return o.Format
}

func (o *GetAttachmentRequest) GetAttachmentID() float64 {
	if o == nil {
		return 0.0
	}
	return o.AttachmentID
}

func (o *GetAttachmentRequest) GetXRedmineSwitchUser() *string {
	if o == nil {
		return nil
	}
	return o.XRedmineSwitchUser
}

type GetAttachmentResponseBody struct {
	Attachment components.Attachment `json:"attachment"`
}

func (o *GetAttachmentResponseBody) GetAttachment() components.Attachment {
	if o == nil {
		return components.Attachment{}
	}
	return o.Attachment
}

type GetAttachmentResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	Object   *GetAttachmentResponseBody
}

func (o *GetAttachmentResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetAttachmentResponse) GetObject() *GetAttachmentResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
