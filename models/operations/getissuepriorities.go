// Code generated by Speakeasy (https://speakeasy.com).

package operations

import (
	"github.com/dmji/go-redmine/models/components"
)

type GetIssuePrioritiesRequest struct {
	Format             components.Format `pathParam:"style=simple,explode=false,name=format"`
	XRedmineSwitchUser *string           `header:"style=simple,explode=false,name=X-Redmine-Switch-User"`
}

func (o *GetIssuePrioritiesRequest) GetFormat() components.Format {
	if o == nil {
		return components.Format("")
	}
	return o.Format
}

func (o *GetIssuePrioritiesRequest) GetXRedmineSwitchUser() *string {
	if o == nil {
		return nil
	}
	return o.XRedmineSwitchUser
}

type GetIssuePrioritiesResponseBody struct {
	IssuePriorities []components.IssuePriority `json:"issue_priorities"`
}

func (o *GetIssuePrioritiesResponseBody) GetIssuePriorities() []components.IssuePriority {
	if o == nil {
		return []components.IssuePriority{}
	}
	return o.IssuePriorities
}

type GetIssuePrioritiesResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	Object   *GetIssuePrioritiesResponseBody
}

func (o *GetIssuePrioritiesResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetIssuePrioritiesResponse) GetObject() *GetIssuePrioritiesResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
