// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/dmji/go-redmine/models/components"
)

type UpdateIssueCategoryIssueCategory struct {
	Name         *string `json:"name,omitempty"`
	AssignedToID *int64  `json:"assigned_to_id,omitempty"`
}

func (o *UpdateIssueCategoryIssueCategory) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *UpdateIssueCategoryIssueCategory) GetAssignedToID() *int64 {
	if o == nil {
		return nil
	}
	return o.AssignedToID
}

type UpdateIssueCategoryRequestBody struct {
	IssueCategory *UpdateIssueCategoryIssueCategory `json:"issue_category,omitempty"`
}

func (o *UpdateIssueCategoryRequestBody) GetIssueCategory() *UpdateIssueCategoryIssueCategory {
	if o == nil {
		return nil
	}
	return o.IssueCategory
}

type UpdateIssueCategoryRequest struct {
	Format             components.Format               `pathParam:"style=simple,explode=false,name=format"`
	IssueCategoryID    int64                           `pathParam:"style=simple,explode=false,name=issue_category_id"`
	XRedmineSwitchUser *string                         `header:"style=simple,explode=false,name=X-Redmine-Switch-User"`
	RequestBody        *UpdateIssueCategoryRequestBody `request:"mediaType=application/json"`
}

func (o *UpdateIssueCategoryRequest) GetFormat() components.Format {
	if o == nil {
		return components.Format("")
	}
	return o.Format
}

func (o *UpdateIssueCategoryRequest) GetIssueCategoryID() int64 {
	if o == nil {
		return 0
	}
	return o.IssueCategoryID
}

func (o *UpdateIssueCategoryRequest) GetXRedmineSwitchUser() *string {
	if o == nil {
		return nil
	}
	return o.XRedmineSwitchUser
}

func (o *UpdateIssueCategoryRequest) GetRequestBody() *UpdateIssueCategoryRequestBody {
	if o == nil {
		return nil
	}
	return o.RequestBody
}

type UpdateIssueCategoryResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
}

func (o *UpdateIssueCategoryResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}
