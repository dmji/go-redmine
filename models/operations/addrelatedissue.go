// Code generated by Speakeasy (https://speakeasy.com).

package operations

import (
	"github.com/dmji/go-redmine/models/components"
)

type AddRelatedIssueRequestBody struct {
	IssueID int64 `json:"issue_id"`
}

func (o *AddRelatedIssueRequestBody) GetIssueID() int64 {
	if o == nil {
		return 0
	}
	return o.IssueID
}

type AddRelatedIssueRequest struct {
	Format             components.Format           `pathParam:"style=simple,explode=false,name=format"`
	ProjectID          int64                       `pathParam:"style=simple,explode=false,name=project_id"`
	RepositoryID       int64                       `pathParam:"style=simple,explode=false,name=repository_id"`
	Revision           string                      `pathParam:"style=simple,explode=false,name=revision"`
	XRedmineSwitchUser *string                     `header:"style=simple,explode=false,name=X-Redmine-Switch-User"`
	RequestBody        *AddRelatedIssueRequestBody `request:"mediaType=application/json"`
}

func (o *AddRelatedIssueRequest) GetFormat() components.Format {
	if o == nil {
		return components.Format("")
	}
	return o.Format
}

func (o *AddRelatedIssueRequest) GetProjectID() int64 {
	if o == nil {
		return 0
	}
	return o.ProjectID
}

func (o *AddRelatedIssueRequest) GetRepositoryID() int64 {
	if o == nil {
		return 0
	}
	return o.RepositoryID
}

func (o *AddRelatedIssueRequest) GetRevision() string {
	if o == nil {
		return ""
	}
	return o.Revision
}

func (o *AddRelatedIssueRequest) GetXRedmineSwitchUser() *string {
	if o == nil {
		return nil
	}
	return o.XRedmineSwitchUser
}

func (o *AddRelatedIssueRequest) GetRequestBody() *AddRelatedIssueRequestBody {
	if o == nil {
		return nil
	}
	return o.RequestBody
}

type AddRelatedIssueResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
}

func (o *AddRelatedIssueResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}
