// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/dmji/go-redmine/models/components"
)

type GetIssueCategoriesRequest struct {
	Format             components.Format          `pathParam:"style=simple,explode=false,name=format"`
	ProjectID          int64                      `pathParam:"style=simple,explode=false,name=project_id"`
	Nometa             *components.Nometa         `queryParam:"style=form,explode=true,name=nometa"`
	XRedmineSwitchUser *string                    `header:"style=simple,explode=false,name=X-Redmine-Switch-User"`
	XRedmineNometa     *components.XRedmineNometa `header:"style=simple,explode=false,name=X-Redmine-Nometa"`
}

func (o *GetIssueCategoriesRequest) GetFormat() components.Format {
	if o == nil {
		return components.Format("")
	}
	return o.Format
}

func (o *GetIssueCategoriesRequest) GetProjectID() int64 {
	if o == nil {
		return 0
	}
	return o.ProjectID
}

func (o *GetIssueCategoriesRequest) GetNometa() *components.Nometa {
	if o == nil {
		return nil
	}
	return o.Nometa
}

func (o *GetIssueCategoriesRequest) GetXRedmineSwitchUser() *string {
	if o == nil {
		return nil
	}
	return o.XRedmineSwitchUser
}

func (o *GetIssueCategoriesRequest) GetXRedmineNometa() *components.XRedmineNometa {
	if o == nil {
		return nil
	}
	return o.XRedmineNometa
}

type GetIssueCategoriesResponseBody struct {
	IssueCategories []components.IssueCategory `json:"issue_categories"`
	TotalCount      *int64                     `json:"total_count,omitempty"`
}

func (o *GetIssueCategoriesResponseBody) GetIssueCategories() []components.IssueCategory {
	if o == nil {
		return []components.IssueCategory{}
	}
	return o.IssueCategories
}

func (o *GetIssueCategoriesResponseBody) GetTotalCount() *int64 {
	if o == nil {
		return nil
	}
	return o.TotalCount
}

type GetIssueCategoriesResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	Object   *GetIssueCategoriesResponseBody
}

func (o *GetIssueCategoriesResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetIssueCategoriesResponse) GetObject() *GetIssueCategoriesResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
