// Code generated by Speakeasy (https://speakeasy.com).

package operations

import (
	"github.com/dmji/go-redmine/models/components"
)

type WikiPage struct {
	Text     string  `json:"text"`
	Comments *string `json:"comments,omitempty"`
	Version  *int64  `json:"version,omitempty"`
}

func (o *WikiPage) GetText() string {
	if o == nil {
		return ""
	}
	return o.Text
}

func (o *WikiPage) GetComments() *string {
	if o == nil {
		return nil
	}
	return o.Comments
}

func (o *WikiPage) GetVersion() *int64 {
	if o == nil {
		return nil
	}
	return o.Version
}

type UpdateWikiPageRequestBody struct {
	WikiPage *WikiPage `json:"wiki_page,omitempty"`
}

func (o *UpdateWikiPageRequestBody) GetWikiPage() *WikiPage {
	if o == nil {
		return nil
	}
	return o.WikiPage
}

type UpdateWikiPageRequest struct {
	Format             components.Format          `pathParam:"style=simple,explode=false,name=format"`
	ProjectID          int64                      `pathParam:"style=simple,explode=false,name=project_id"`
	WikiPageTitle      string                     `pathParam:"style=simple,explode=false,name=wiki_page_title"`
	XRedmineSwitchUser *string                    `header:"style=simple,explode=false,name=X-Redmine-Switch-User"`
	RequestBody        *UpdateWikiPageRequestBody `request:"mediaType=application/json"`
}

func (o *UpdateWikiPageRequest) GetFormat() components.Format {
	if o == nil {
		return components.Format("")
	}
	return o.Format
}

func (o *UpdateWikiPageRequest) GetProjectID() int64 {
	if o == nil {
		return 0
	}
	return o.ProjectID
}

func (o *UpdateWikiPageRequest) GetWikiPageTitle() string {
	if o == nil {
		return ""
	}
	return o.WikiPageTitle
}

func (o *UpdateWikiPageRequest) GetXRedmineSwitchUser() *string {
	if o == nil {
		return nil
	}
	return o.XRedmineSwitchUser
}

func (o *UpdateWikiPageRequest) GetRequestBody() *UpdateWikiPageRequestBody {
	if o == nil {
		return nil
	}
	return o.RequestBody
}

type UpdateWikiPageResponseBody struct {
	WikiPage components.WikiPage `json:"wiki_page"`
}

func (o *UpdateWikiPageResponseBody) GetWikiPage() components.WikiPage {
	if o == nil {
		return components.WikiPage{}
	}
	return o.WikiPage
}

type UpdateWikiPageResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	Object   *UpdateWikiPageResponseBody
}

func (o *UpdateWikiPageResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *UpdateWikiPageResponse) GetObject() *UpdateWikiPageResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
