// Code generated by Speakeasy (https://speakeasy.com).

package operations

import (
	"github.com/dmji/go-redmine/models/components"
)

type GetRoleRequest struct {
	Format             components.Format `pathParam:"style=simple,explode=false,name=format"`
	RoleID             int64             `pathParam:"style=simple,explode=false,name=role_id"`
	XRedmineSwitchUser *string           `header:"style=simple,explode=false,name=X-Redmine-Switch-User"`
}

func (o *GetRoleRequest) GetFormat() components.Format {
	if o == nil {
		return components.Format("")
	}
	return o.Format
}

func (o *GetRoleRequest) GetRoleID() int64 {
	if o == nil {
		return 0
	}
	return o.RoleID
}

func (o *GetRoleRequest) GetXRedmineSwitchUser() *string {
	if o == nil {
		return nil
	}
	return o.XRedmineSwitchUser
}

type GetRoleResponseBody struct {
	Role components.Role `json:"role"`
}

func (o *GetRoleResponseBody) GetRole() components.Role {
	if o == nil {
		return components.Role{}
	}
	return o.Role
}

type GetRoleResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	Object   *GetRoleResponseBody
}

func (o *GetRoleResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetRoleResponse) GetObject() *GetRoleResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
