// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/dmji/go-redmine/models/components"
)

type GetCurrentUserQueryParamInclude string

const (
	GetCurrentUserQueryParamIncludeMemberships GetCurrentUserQueryParamInclude = "memberships"
	GetCurrentUserQueryParamIncludeGroups      GetCurrentUserQueryParamInclude = "groups"
)

func (e GetCurrentUserQueryParamInclude) ToPointer() *GetCurrentUserQueryParamInclude {
	return &e
}
func (e *GetCurrentUserQueryParamInclude) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "memberships":
		fallthrough
	case "groups":
		*e = GetCurrentUserQueryParamInclude(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetCurrentUserQueryParamInclude: %v", v)
	}
}

type GetCurrentUserRequest struct {
	Format             components.Format                 `pathParam:"style=simple,explode=false,name=format"`
	XRedmineSwitchUser *string                           `header:"style=simple,explode=false,name=X-Redmine-Switch-User"`
	Include            []GetCurrentUserQueryParamInclude `queryParam:"style=form,explode=false,name=include"`
}

func (o *GetCurrentUserRequest) GetFormat() components.Format {
	if o == nil {
		return components.Format("")
	}
	return o.Format
}

func (o *GetCurrentUserRequest) GetXRedmineSwitchUser() *string {
	if o == nil {
		return nil
	}
	return o.XRedmineSwitchUser
}

func (o *GetCurrentUserRequest) GetInclude() []GetCurrentUserQueryParamInclude {
	if o == nil {
		return nil
	}
	return o.Include
}

type GetCurrentUserResponseBody struct {
	User components.User `json:"user"`
}

func (o *GetCurrentUserResponseBody) GetUser() components.User {
	if o == nil {
		return components.User{}
	}
	return o.User
}

type GetCurrentUserResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	Object   *GetCurrentUserResponseBody
}

func (o *GetCurrentUserResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetCurrentUserResponse) GetObject() *GetCurrentUserResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
