// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/dmji/go-redmine/models/components"
)

type Membership struct {
	UserID  int64   `json:"user_id"`
	RoleIds []int64 `json:"role_ids"`
}

func (o *Membership) GetUserID() int64 {
	if o == nil {
		return 0
	}
	return o.UserID
}

func (o *Membership) GetRoleIds() []int64 {
	if o == nil {
		return []int64{}
	}
	return o.RoleIds
}

type CreateMembershipRequestBody struct {
	Membership Membership `json:"membership"`
}

func (o *CreateMembershipRequestBody) GetMembership() Membership {
	if o == nil {
		return Membership{}
	}
	return o.Membership
}

type CreateMembershipRequest struct {
	Format             components.Format            `pathParam:"style=simple,explode=false,name=format"`
	ProjectID          int64                        `pathParam:"style=simple,explode=false,name=project_id"`
	XRedmineSwitchUser *string                      `header:"style=simple,explode=false,name=X-Redmine-Switch-User"`
	RequestBody        *CreateMembershipRequestBody `request:"mediaType=application/json"`
}

func (o *CreateMembershipRequest) GetFormat() components.Format {
	if o == nil {
		return components.Format("")
	}
	return o.Format
}

func (o *CreateMembershipRequest) GetProjectID() int64 {
	if o == nil {
		return 0
	}
	return o.ProjectID
}

func (o *CreateMembershipRequest) GetXRedmineSwitchUser() *string {
	if o == nil {
		return nil
	}
	return o.XRedmineSwitchUser
}

func (o *CreateMembershipRequest) GetRequestBody() *CreateMembershipRequestBody {
	if o == nil {
		return nil
	}
	return o.RequestBody
}

type CreateMembershipResponseBody struct {
	Membership components.Membership `json:"membership"`
}

func (o *CreateMembershipResponseBody) GetMembership() components.Membership {
	if o == nil {
		return components.Membership{}
	}
	return o.Membership
}

type CreateMembershipResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	Object   *CreateMembershipResponseBody
}

func (o *CreateMembershipResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *CreateMembershipResponse) GetObject() *CreateMembershipResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
