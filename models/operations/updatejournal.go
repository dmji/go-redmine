// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/dmji/go-redmine/models/components"
)

type Journal struct {
	Notes        *string `json:"notes,omitempty"`
	PrivateNotes *bool   `json:"private_notes,omitempty"`
}

func (o *Journal) GetNotes() *string {
	if o == nil {
		return nil
	}
	return o.Notes
}

func (o *Journal) GetPrivateNotes() *bool {
	if o == nil {
		return nil
	}
	return o.PrivateNotes
}

type UpdateJournalRequestBody struct {
	Journal *Journal `json:"journal,omitempty"`
}

func (o *UpdateJournalRequestBody) GetJournal() *Journal {
	if o == nil {
		return nil
	}
	return o.Journal
}

type UpdateJournalRequest struct {
	Format             components.Format         `pathParam:"style=simple,explode=false,name=format"`
	JournalID          int64                     `pathParam:"style=simple,explode=false,name=journal_id"`
	XRedmineSwitchUser *string                   `header:"style=simple,explode=false,name=X-Redmine-Switch-User"`
	RequestBody        *UpdateJournalRequestBody `request:"mediaType=application/json"`
}

func (o *UpdateJournalRequest) GetFormat() components.Format {
	if o == nil {
		return components.Format("")
	}
	return o.Format
}

func (o *UpdateJournalRequest) GetJournalID() int64 {
	if o == nil {
		return 0
	}
	return o.JournalID
}

func (o *UpdateJournalRequest) GetXRedmineSwitchUser() *string {
	if o == nil {
		return nil
	}
	return o.XRedmineSwitchUser
}

func (o *UpdateJournalRequest) GetRequestBody() *UpdateJournalRequestBody {
	if o == nil {
		return nil
	}
	return o.RequestBody
}

type UpdateJournalResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
}

func (o *UpdateJournalResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}
