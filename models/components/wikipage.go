// Code generated by Speakeasy (https://speakeasy.com).

package components

import (
	"time"

	"github.com/dmji/go-redmine/internal/utils"
)

type WikiPageParent struct {
	Title string `json:"title"`
}

func (o *WikiPageParent) GetTitle() string {
	if o == nil {
		return ""
	}
	return o.Title
}

type WikiPage struct {
	Title       string          `json:"title"`
	Parent      *WikiPageParent `json:"parent,omitempty"`
	Text        string          `json:"text"`
	Version     int64           `json:"version"`
	Author      IDName          `json:"author"`
	Comments    *string         `json:"comments"`
	CreatedOn   time.Time       `json:"created_on"`
	UpdatedOn   time.Time       `json:"updated_on"`
	Attachments []Attachment    `json:"attachments,omitempty"`
}

func (w WikiPage) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(w, "", false)
}

func (w *WikiPage) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &w, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *WikiPage) GetTitle() string {
	if o == nil {
		return ""
	}
	return o.Title
}

func (o *WikiPage) GetParent() *WikiPageParent {
	if o == nil {
		return nil
	}
	return o.Parent
}

func (o *WikiPage) GetText() string {
	if o == nil {
		return ""
	}
	return o.Text
}

func (o *WikiPage) GetVersion() int64 {
	if o == nil {
		return 0
	}
	return o.Version
}

func (o *WikiPage) GetAuthor() IDName {
	if o == nil {
		return IDName{}
	}
	return o.Author
}

func (o *WikiPage) GetComments() *string {
	if o == nil {
		return nil
	}
	return o.Comments
}

func (o *WikiPage) GetCreatedOn() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedOn
}

func (o *WikiPage) GetUpdatedOn() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.UpdatedOn
}

func (o *WikiPage) GetAttachments() []Attachment {
	if o == nil {
		return nil
	}
	return o.Attachments
}
