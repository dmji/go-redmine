// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/dmji/go-redmine/internal/utils"
	"time"
)

type File struct {
	ID           int64     `json:"id"`
	Filename     string    `json:"filename"`
	Filesize     int64     `json:"filesize"`
	ContentType  string    `json:"content_type"`
	Description  string    `json:"description"`
	ContentURL   string    `json:"content_url"`
	ThumbnailURL *string   `json:"thumbnail_url,omitempty"`
	Author       IDName    `json:"author"`
	CreatedOn    time.Time `json:"created_on"`
	Version      *IDName   `json:"version,omitempty"`
	Digest       string    `json:"digest"`
	Downloads    int64     `json:"downloads"`
}

func (f File) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(f, "", false)
}

func (f *File) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &f, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *File) GetID() int64 {
	if o == nil {
		return 0
	}
	return o.ID
}

func (o *File) GetFilename() string {
	if o == nil {
		return ""
	}
	return o.Filename
}

func (o *File) GetFilesize() int64 {
	if o == nil {
		return 0
	}
	return o.Filesize
}

func (o *File) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *File) GetDescription() string {
	if o == nil {
		return ""
	}
	return o.Description
}

func (o *File) GetContentURL() string {
	if o == nil {
		return ""
	}
	return o.ContentURL
}

func (o *File) GetThumbnailURL() *string {
	if o == nil {
		return nil
	}
	return o.ThumbnailURL
}

func (o *File) GetAuthor() IDName {
	if o == nil {
		return IDName{}
	}
	return o.Author
}

func (o *File) GetCreatedOn() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedOn
}

func (o *File) GetVersion() *IDName {
	if o == nil {
		return nil
	}
	return o.Version
}

func (o *File) GetDigest() string {
	if o == nil {
		return ""
	}
	return o.Digest
}

func (o *File) GetDownloads() int64 {
	if o == nil {
		return 0
	}
	return o.Downloads
}
