// Code generated by Speakeasy (https://speakeasy.com).

package components

import (
	"time"

	"github.com/dmji/go-redmine/internal/utils"
)

type Parent struct {
	Title string `json:"title"`
}

func (o *Parent) GetTitle() string {
	if o == nil {
		return ""
	}
	return o.Title
}

type WikiPages struct {
	Title     int64     `json:"title"`
	Parent    *Parent   `json:"parent,omitempty"`
	Version   int64     `json:"version"`
	CreatedOn time.Time `json:"created_on"`
	UpdatedOn time.Time `json:"updated_on"`
}

func (w WikiPages) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(w, "", false)
}

func (w *WikiPages) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &w, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *WikiPages) GetTitle() int64 {
	if o == nil {
		return 0
	}
	return o.Title
}

func (o *WikiPages) GetParent() *Parent {
	if o == nil {
		return nil
	}
	return o.Parent
}

func (o *WikiPages) GetVersion() int64 {
	if o == nil {
		return 0
	}
	return o.Version
}

func (o *WikiPages) GetCreatedOn() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedOn
}

func (o *WikiPages) GetUpdatedOn() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.UpdatedOn
}
